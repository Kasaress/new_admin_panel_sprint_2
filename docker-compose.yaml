version: '3.8'
volumes:
  pgdbdata:
  static:
  media:

services:
  pgdb:
    image: postgres:15
    env_file:
      - .env
    container_name: pgdb
    volumes:
      - pgdbdata:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  admin_movies:
    container_name: admin_movies
    build: ./
    restart: always
    ports:
      - 8000:8000
    env_file:
      - movies_admin/config/.env
    depends_on:
      pgdb:
        condition: service_healthy
    volumes:
      - static:/app/static/
      - media:/app/media/
    environment:
      - COMPOSE_BUILD_NO_CACHE=1

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static:/var/static/
      - media:/var/media/
    depends_on:
      - admin_movies
    ports:
      - 80:80
    environment:
      - COMPOSE_BUILD_NO_CACHE=1

  swagger:
    image: swaggerapi/swagger-ui
    ports:
      - 8080:8080
    volumes:
      - ./openapi.yaml:/swagger.yaml
    environment:
      - SWAGGER_JSON=/swagger.yaml
    container_name: swagger







